(()=>{var e={193:(e,s,t)=>{const o=t(496);o.config.update({region:"us-east-1"});const r=new o.DynamoDB.DocumentClient;e.exports=r},393:(e,s,t)=>{const o=t(193);e.exports={getMoviesByCastMember:async(e,s)=>{const{castMember:t}=e.params;try{const e={TableName:"CastMembers",IndexName:"cast_member-movieId-index",KeyConditionExpression:"cast_member = :castMember",ExpressionAttributeValues:{":castMember":t}},r=await o.query(e).promise();if(!r.Items||0===r.Items.length)return s.status(404).json({error:"No movies found for the cast member"});const a=r.Items.map((e=>e.movieId)),i=await Promise.all(a.map((async e=>{const s={TableName:"Movies",IndexName:"movieId-index",KeyConditionExpression:"movieId = :movieId",ExpressionAttributeValues:{":movieId":e}};return(await o.query(s).promise()).Items[0]})));s.json(i)}catch(e){s.status(500).json({error:e.message})}},getMoviesByGenre:async(e,s)=>{const{genre:t}=e.params,{pageSize:r=10,page:a=1}=e.query;try{const e={TableName:"Genres",KeyConditionExpression:"genre = :genre",ExpressionAttributeValues:{":genre":t}},i=await o.query(e).promise();if(!i.Items||0===i.Items.length)return s.status(404).json({error:"No movies found for the genre"});const n=i.Items.map((e=>e.movieId)),m=await Promise.all(n.map((async e=>{const s={TableName:"Movies",IndexName:"movieId-index",KeyConditionExpression:"movieId = :movieId",ExpressionAttributeValues:{":movieId":e}};return(await o.query(s).promise()).Items[0]}))),c=(a-1)*r,d=m.slice(c,c+r);s.json(d)}catch(e){s.status(500).json({error:e.message})}},getMovieDetailsByMovieId:async(e,s)=>{const{movieId:t}=e.params,r={TableName:"Movies",IndexName:"movieId-index",KeyConditionExpression:"movieId = :movieId",ExpressionAttributeValues:{":movieId":t}};try{const e=await o.query(r).promise();e.Items&&e.Items.length>0?s.json(e.Items[0]):s.status(404).json({error:"Movie not found"})}catch(e){s.status(500).json({error:e.message})}},addMovie:async(e,s)=>{const{movieId:t,title:r,year:a,castMembers:i,genres:n}=e.body;try{if(!(t&&r&&a&&i&&n))return s.status(400).json({error:"Missing required fields"});const e={TransactItems:[{Put:{TableName:"Movies",Item:{movieId:t,title:r,year:a}}},...i.map((e=>({Put:{TableName:"CastMembers",Item:{cast_member:e,movieId:t}}}))),...n.map((e=>({Put:{TableName:"Genres",Item:{genre:e,movieId:t}}})))]};await o.transactWrite(e).promise(),s.json({message:`Movie ${r} added successfully with cast members and genres.`})}catch(e){s.status(500).json({error:e.message})}},removeCastMember:async(e,s)=>{const{movieId:t}=e.params,{castMember:r}=e.body;try{const e=await(async e=>{const s={TableName:"Genres",FilterExpression:"movieId = :movieId",ExpressionAttributeValues:{":movieId":e}};return(await o.scan(s).promise()).Items.map((e=>e.genre))})(t),a={TransactItems:[{Delete:{TableName:"CastMembers",Key:{cast_member:r,movieId:t}}},...e.map((e=>({Delete:{TableName:"Genres",Key:{genre:e,movieId:t}}})))]};await o.transactWrite(a).promise(),s.json({message:`Cast member ${r} removed from movie ${t}`})}catch(e){s.status(500).json({error:e.message})}},getMovieByTitle:async(e,s)=>{const{title:t}=e.params,r={TableName:"Movies",IndexName:"title-movieId-index",KeyConditionExpression:"title = :title",ExpressionAttributeValues:{":title":t}};try{const e=await o.query(r).promise();e.Items&&e.Items.length>0?s.json(e.Items):s.status(404).json({error:"Movie not found"})}catch(e){s.status(500).json({error:e.message})}}}},428:(e,s,t)=>{const o=t(252).json();e.exports=o},892:(e,s,t)=>{const o=t(252),{getMoviesByCastMember:r}=t(393),{getMoviesByGenre:a}=t(393),{getMovieDetailsByMovieId:i}=t(393),{addMovie:n}=t(393),{removeCastMember:m}=t(393),{getMovieByTitle:c}=t(393),d=o.Router();d.get("/movies/title/:title",c),d.get("/movies/cast/:castMember",r),d.get("/movies/genre/:genre",a),d.get("/movies/details/:movieId",i),d.post("/movies/add",n),d.post("/movies/:movieId/cast/remove",m),e.exports=d},496:e=>{"use strict";e.exports=require("aws-sdk")},252:e=>{"use strict";e.exports=require("express")}},s={};function t(o){var r=s[o];if(void 0!==r)return r.exports;var a=s[o]={exports:{}};return e[o](a,a.exports,t),a.exports}(()=>{const e=t(252),s=t(428),o=t(892),r=e();r.use(s),r.use("/api",o),r.listen(3e3,(()=>{console.log("Server running at http://localhost:3000")}))})()})();